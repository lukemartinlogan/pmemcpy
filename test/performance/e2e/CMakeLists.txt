cmake_minimum_required( VERSION 3.9.0 )
project(e2e LANGUAGES C CXX)

set( CMAKE_CXX_STANDARD 17 )
set( CMAKE_CXX_STANDARD_REQUIRED YES )
set( CMAKE_C_FLAGS "-O3 --fast-math" )
set( CMAKE_CXX_FLAGS "-O3 --fast-math" )
#set( CMAKE_C_FLAGS "-pg -g -O3 --fast-math" )
#set( CMAKE_CXX_FLAGS "-pg -g -O3 --fast-math" )
#set( CMAKE_C_FLAGS "-g" )
#set( CMAKE_CXX_FLAGS "-g" )

find_package(OpenMP)

set(ORIG_LIBS adios adiosread netcdf pnetcdf mpi m pthread z zfp lz4 SZ blosc pmemcpy)
set(PMEMCPY_LIBS pmemobj msgpackc boost_system boost_serialization capnp kj mpi)
set(LIBS dl ${ORIG_LIBS} ${PMEMCPY_LIBS})

include_directories(${CMAKE_SOURCE_DIR}/include ${CMAKE_SOURCE_DIR}/test/performance/pmemulator)

set(TEST_CASES bp nc4 nc5 pmemcpy pmemcpy_omp)
set(DIMS 3d)
set(IO_TYPES read write)

function(get_test_path PREFIX)
    set(TEST_NAME ${IO_TYPE}_${DIM}_${TEST_CASE})
    if(EXISTS ${PREFIX}.c)
        set(PATH ${PREFIX}.c)
        add_executable(${TEST_NAME} ${PATH})
        target_link_libraries(${TEST_NAME} ${LIBS})
        target_link_libraries(${TEST_NAME} "${OpenMP_C_FLAGS}")
        target_compile_options(${TEST_NAME} PUBLIC "${OpenMP_C_FLAGS}")
    elseif(EXISTS ${PREFIX}.cpp)
        set(PATH ${PREFIX}.cpp)
        add_executable(${TEST_NAME} ${PATH})
        target_link_libraries(${TEST_NAME} ${LIBS})
        target_link_libraries(${TEST_NAME} "${OpenMP_CXX_FLAGS}")
        target_compile_options(${TEST_NAME} PUBLIC "${OpenMP_CXX_FLAGS}")
        #target_compile_definitions(${TEST_NAME} PUBLIC PMEMULATION)
    else()
        message("${PREFIX}.c and ${PREFIX}.cpp don't exist")
    endif()
endfunction()

foreach(TEST_CASE IN LISTS TEST_CASES)
    foreach(IO_TYPE IN LISTS IO_TYPES)
        foreach(DIM IN LISTS DIMS)
            get_test_path(${CMAKE_CURRENT_SOURCE_DIR}/${DIM}/${IO_TYPE}_${DIM}_${TEST_CASE})
        endforeach()
    endforeach()
endforeach()